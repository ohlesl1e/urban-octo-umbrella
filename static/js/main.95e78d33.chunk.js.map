{"version":3,"sources":["Home.js","redux/formAction.js","Result.js","App.js","reportWebVitals.js","redux/formReducer.js","index.js"],"names":["connect","dispatch","navigate","useNavigate","abortController","AbortController","recaptchaRef","React","createRef","useState","validated","setvalidated","undefined","fname","setfname","lname","setlname","title","settitle","heightFeet","setheightFeet","heightInches","setheightInches","phone","setphone","street","setstreet","apt","setapt","city","setcity","state","setstate","zip","setzip","email","setemail","service1","setservice1","service2","setservice2","service3","setservice3","service4","setservice4","service5","setservice5","budget","setbudget","position","setposition","useEffect","scrollListener","abort","formatPhoneNumber","value","phoneNumber","replace","phoneNumberLength","length","slice","document","addEventListener","requestAnimationFrame","calculateScrollDistance","scrollTop","window","scrollY","windowHeight","innerHeight","scrollLength","getDocHeight","Math","floor","max","body","scrollHeight","offsetHeight","clientHeight","documentElement","Container","as","Card","className","ProgressBar","style","padding","now","Form","noValidate","onSubmit","event","recaptchaValue","current","getValue","currentTarget","checkValidity","preventDefault","stopPropagation","alert","type","payload","FormLabel","Row","FormGroup","Col","controlId","FormControl","required","placeholder","size","onInput","e","target","Feedback","FormSelect","onChange","FloatingLabel","label","min","md","toString","isNaN","parseInt","FormText","Group","Label","Control","Select","FormCheck","id","onClick","name","FormCheckInput","marginInlineEnd","FormCheckLabel","href","rel","ref","sitekey","Button","Body","Title","Text","width","height","src","frameBorder","scrolling","marginHeight","marginWidth","ListGroup","Item","App","exact","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","store","createStore","applyMiddleware","thunk","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.95e78d33.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Container, Form, Row, Col, FormGroup, FormLabel, FormControl, FormSelect, FormCheck, Card, Button, FormText, FloatingLabel, ProgressBar } from 'react-bootstrap'\r\nimport FormCheckInput from 'react-bootstrap/esm/FormCheckInput'\r\nimport FormCheckLabel from 'react-bootstrap/esm/FormCheckLabel'\r\nimport RangeSlider from 'react-bootstrap-range-slider'\r\nimport { useState, useEffect } from 'react'\r\nimport { useNavigate } from 'react-router'\r\nimport ReCAPTCHA from 'react-google-recaptcha'\r\nimport { connect } from 'react-redux'\r\nimport { setForm } from './redux/formAction'\r\n\r\nfunction Home({ dispatch }) {\r\n\tlet navigate = useNavigate()\r\n\tconst abortController = new AbortController()\r\n\tconst recaptchaRef = React.createRef()\r\n\tconst [validated, setvalidated] = useState(false)\r\n\tconst [fname, setfname] = useState(undefined)\r\n\tconst [lname, setlname] = useState(undefined)\r\n\tconst [title, settitle] = useState(undefined)\r\n\tconst [heightFeet, setheightFeet] = useState(undefined)\r\n\tconst [heightInches, setheightInches] = useState(undefined)\r\n\tconst [phone, setphone] = useState('')\r\n\tconst [street, setstreet] = useState(undefined)\r\n\tconst [apt, setapt] = useState(undefined)\r\n\tconst [city, setcity] = useState(undefined)\r\n\tconst [state, setstate] = useState(undefined)\r\n\tconst [zip, setzip] = useState('')\r\n\tconst [email, setemail] = useState(undefined)\r\n\tconst [service1, setservice1] = useState(false)\r\n\tconst [service2, setservice2] = useState(false)\r\n\tconst [service3, setservice3] = useState(false)\r\n\tconst [service4, setservice4] = useState(false)\r\n\tconst [service5, setservice5] = useState(false)\r\n\tconst [budget, setbudget] = useState('')\r\n\tconst [position, setposition] = useState(0)\r\n\r\n\tuseEffect(() => {\r\n\t\tscrollListener()\r\n\t\treturn () => {\r\n\t\t\tabortController.abort()\r\n\t\t}\r\n\t})\r\n\r\n\tconst formatPhoneNumber = value => {\r\n\t\tif (!value) return value;\r\n\t\tconst phoneNumber = value.replace(/[^\\d]/g, \"\");\r\n\t\tconst phoneNumberLength = phoneNumber.length;\r\n\r\n\t\tif (phoneNumberLength < 4) return phoneNumber;\r\n\r\n\t\tif (phoneNumberLength < 7) {\r\n\t\t\treturn `(${phoneNumber.slice(0, 3)}) ${phoneNumber.slice(3)}`;\r\n\t\t}\r\n\r\n\t\treturn `(${phoneNumber.slice(0, 3)}) ${phoneNumber.slice(3, 6)}-${phoneNumber.slice(6, 10)}`;\r\n\t}\r\n\r\n\tconst handleSubmit = event => {\r\n\t\tconst recaptchaValue = recaptchaRef.current.getValue()\r\n\t\tconst form = event.currentTarget\r\n\t\tif (form.checkValidity() === false || recaptchaValue === '') {\r\n\t\t\tevent.preventDefault()\r\n\t\t\tevent.stopPropagation()\r\n\t\t\tif (recaptchaValue === '') {\r\n\t\t\t\talert('Please do the captcha')\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tdispatch(setForm({\r\n\t\t\t\tfname,\r\n\t\t\t\tlname,\r\n\t\t\t\ttitle,\r\n\t\t\t\theightFeet,\r\n\t\t\t\theightInches,\r\n\t\t\t\tphone,\r\n\t\t\t\tstreet,\r\n\t\t\t\tapt,\r\n\t\t\t\tcity,\r\n\t\t\t\tstate,\r\n\t\t\t\tzip,\r\n\t\t\t\temail,\r\n\t\t\t\tservice1,\r\n\t\t\t\tservice2,\r\n\t\t\t\tservice3,\r\n\t\t\t\tservice4,\r\n\t\t\t\tservice5,\r\n\t\t\t\tbudget,\r\n\t\t\t}))\r\n\t\t\tnavigate('/urban-octo-umbrella/result')\r\n\r\n\t\t}\r\n\t\tsetvalidated(true)\r\n\t}\r\n\r\n\tconst scrollListener = () => {\r\n\t\tdocument.addEventListener('scroll', () => {\r\n\t\t\trequestAnimationFrame(() => {\r\n\t\t\t\tcalculateScrollDistance()\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n\tconst calculateScrollDistance = () => {\r\n\t\tconst scrollTop = window.scrollY\r\n\t\tconst windowHeight = window.innerHeight\r\n\t\tconst documentHeight = getDocHeight()\r\n\r\n\t\tconst scrollLength = documentHeight - windowHeight\r\n\t\tsetposition(Math.floor(scrollTop / scrollLength * 100))\r\n\t}\r\n\r\n\tconst getDocHeight = () => {\r\n\t\treturn Math.max(\r\n\t\t\tdocument.body.scrollHeight,\r\n\t\t\tdocument.body.offsetHeight,\r\n\t\t\tdocument.body.clientHeight,\r\n\t\t\tdocument.documentElement.scrollHeight,\r\n\t\t\tdocument.documentElement.offsetHeight,\r\n\t\t\tdocument.documentElement.clientHeight,\r\n\t\t)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Container as={Card} className='p-3'>\r\n\t\t\t\t<ProgressBar className='fixed-top container' style={{ padding: '0' }} now={position} />\r\n\t\t\t\t<h1>CSC 642 848 Fall 2021 Individual Assignment Leslie Zhou</h1>\r\n\t\t\t\t<h2>Data survey form</h2>\r\n\t\t\t\t{/* First and last name */}\r\n\t\t\t\t<Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<FormLabel className='text-muted'>Personal information</FormLabel>\r\n\t\t\t\t\t<hr className='mt-0' />\r\n\t\t\t\t\t<Row className='mb-3'>\r\n\t\t\t\t\t\t<FormGroup as={Col} controlId='lastName'>\r\n\t\t\t\t\t\t\t<FormLabel><b>Last name*</b></FormLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\t\ttype='name'\r\n\t\t\t\t\t\t\t\trequired={true}\r\n\t\t\t\t\t\t\t\tplaceholder='Enter your last name'\r\n\t\t\t\t\t\t\t\tsize='lg'\r\n\t\t\t\t\t\t\t\tonInput={e => setlname(e.target.value)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<FormControl.Feedback type='invalid'>\r\n\t\t\t\t\t\t\t\tPlease enter a last name.\r\n\t\t\t\t\t\t\t</FormControl.Feedback>\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t<FormGroup as={Col} controlId='firstName'>\r\n\t\t\t\t\t\t\t<FormLabel><b>First name*</b></FormLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\t\ttype='name'\r\n\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\tplaceholder='Enter your first name'\r\n\t\t\t\t\t\t\t\tsize='lg'\r\n\t\t\t\t\t\t\t\tonInput={e => setfname(e.target.value)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<FormControl.Feedback type='invalid'>\r\n\t\t\t\t\t\t\t\tPlease enter a first name.\r\n\t\t\t\t\t\t\t</FormControl.Feedback>\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t</Row>\r\n\r\n\t\t\t\t\t{/* Preferred title */}\r\n\t\t\t\t\t<FormGroup className='mb-3' controlId='preferredTitle'>\r\n\t\t\t\t\t\t<FormLabel><b>Preferred title*</b></FormLabel>\r\n\t\t\t\t\t\t<FormSelect\r\n\t\t\t\t\t\t\tsize='lg'\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\tonChange={e => settitle(e.target.value)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<option value=''>Choose...</option>\r\n\t\t\t\t\t\t\t<option>none</option>\r\n\t\t\t\t\t\t\t<option>Student</option>\r\n\t\t\t\t\t\t\t<option>Professor</option>\r\n\t\t\t\t\t\t\t<option>Staff</option>\r\n\t\t\t\t\t\t\t<option>Retired</option>\r\n\t\t\t\t\t\t</FormSelect>\r\n\t\t\t\t\t\t<FormControl.Feedback type='invalid'>\r\n\t\t\t\t\t\t\tPlease select a valid preferred title.\r\n\t\t\t\t\t\t</FormControl.Feedback>\r\n\t\t\t\t\t</FormGroup>\r\n\r\n\t\t\t\t\t{/* Height */}\r\n\t\t\t\t\t<FormGroup className='mb-3' controlId='height'>\r\n\t\t\t\t\t\t<FormLabel><b>Height</b></FormLabel>\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t<FloatingLabel label='Feet'>\r\n\t\t\t\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\tmin={3}\r\n\t\t\t\t\t\t\t\t\t\tmax={8}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='5'\r\n\t\t\t\t\t\t\t\t\t\tonInput={e => setheightFeet(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</FloatingLabel>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t<FloatingLabel label='Inches'>\r\n\t\t\t\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\tmin={0}\r\n\t\t\t\t\t\t\t\t\t\tmax={11}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='5'\r\n\t\t\t\t\t\t\t\t\t\tonInput={e => setheightInches(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</FloatingLabel>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</FormGroup>\r\n\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<FormLabel className='text-muted'>Contact information</FormLabel>\r\n\t\t\t\t\t<hr className='mt-0' />\r\n\t\t\t\t\t{/* Phone number */}\r\n\t\t\t\t\t<FormGroup controlId='phone'>\r\n\t\t\t\t\t\t<FormLabel><b>Phone</b></FormLabel><br />\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<Col md='4'>\r\n\t\t\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\t\t\ttype='tel'\r\n\t\t\t\t\t\t\t\t\tvalue={phone}\r\n\t\t\t\t\t\t\t\t\tplaceholder='(555) 555-5555'\r\n\t\t\t\t\t\t\t\t\tonInput={e => setphone(formatPhoneNumber(e.target.value.toString()))}\r\n\t\t\t\t\t\t\t\t\tsize='lg'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col md='8'>\r\n\t\t\t\t\t\t\t\t<RangeSlider\r\n\t\t\t\t\t\t\t\t\tmin={1000000000}\r\n\t\t\t\t\t\t\t\t\tmax={9999999999}\r\n\t\t\t\t\t\t\t\t\tvalue={isNaN(parseInt(phone.toString().replace(/\\D/g, ''))) ? 5555555555 : parseInt(phone.toString().replace(/\\D/g, ''))}\r\n\t\t\t\t\t\t\t\t\tonInput={e => setphone(formatPhoneNumber(e.target.value.toString()))}\r\n\t\t\t\t\t\t\t\t\tsize='lg'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<FormText className=\"text-muted\">\r\n\t\t\t\t\t\t\t\t\tThis slider is just a joke. Don't take points off for this.\r\n\t\t\t\t\t\t\t\t</FormText>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</FormGroup>\r\n\r\n\t\t\t\t\t{/* Address */}\r\n\t\t\t\t\t<Form.Group className=\"mb-3\" controlId='street'>\r\n\t\t\t\t\t\t<Form.Label><b>Address*</b></Form.Label>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\tplaceholder=\"420 Blaze Ave\"\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\tsize='lg'\r\n\t\t\t\t\t\t\tonInput={e => setstreet(e.target.value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<FormControl.Feedback type='invalid'>\r\n\t\t\t\t\t\t\tPlease enter a valid address.\r\n\t\t\t\t\t\t</FormControl.Feedback>\r\n\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t<Form.Group className=\"mb-3\" controlId='apt'>\r\n\t\t\t\t\t\t<Form.Label><b>Address 2</b></Form.Label>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\tplaceholder=\"Apartment, suite, etc.\"\r\n\t\t\t\t\t\t\tsize='lg'\r\n\t\t\t\t\t\t\tonInput={e => setapt(e.target.value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t<Row className=\"mb-3\">\r\n\t\t\t\t\t\t<Form.Group as={Col} controlId=\"city\">\r\n\t\t\t\t\t\t\t<Form.Label><b>City*</b></Form.Label>\r\n\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\tplaceholder='San Francisco'\r\n\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\ttype='city'\r\n\t\t\t\t\t\t\t\tsize='lg'\r\n\t\t\t\t\t\t\t\tonInput={e => setcity(e.target.value)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<FormControl.Feedback type='invalid'>\r\n\t\t\t\t\t\t\t\tPlease enter a valid city.\r\n\t\t\t\t\t\t\t</FormControl.Feedback>\r\n\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t<Form.Group as={Col} controlId=\"state\">\r\n\t\t\t\t\t\t\t<Form.Label><b>State*</b></Form.Label>\r\n\t\t\t\t\t\t\t<Form.Select\r\n\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\tsize='lg'\r\n\t\t\t\t\t\t\t\tonChange={e => setstate(e.target.value)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<option value=''>Choose...</option>\r\n\t\t\t\t\t\t\t\t<option>Alabama</option>\r\n\t\t\t\t\t\t\t\t<option>Alaska</option>\r\n\t\t\t\t\t\t\t\t<option>Arizona</option>\r\n\t\t\t\t\t\t\t\t<option>Arkansas</option>\r\n\t\t\t\t\t\t\t\t<option>California</option>\r\n\t\t\t\t\t\t\t\t<option>Colorado</option>\r\n\t\t\t\t\t\t\t\t<option>Connecticut</option>\r\n\t\t\t\t\t\t\t\t<option>Delaware</option>\r\n\t\t\t\t\t\t\t\t<option>Florida</option>\r\n\t\t\t\t\t\t\t\t<option>Georgia</option>\r\n\t\t\t\t\t\t\t\t<option>Hawaii</option>\r\n\t\t\t\t\t\t\t\t<option>Idaho</option>\r\n\t\t\t\t\t\t\t\t<option>Illinois</option>\r\n\t\t\t\t\t\t\t\t<option>Indiana</option>\r\n\t\t\t\t\t\t\t\t<option>Iowa</option>\r\n\t\t\t\t\t\t\t\t<option>Kansas</option>\r\n\t\t\t\t\t\t\t\t<option>Kentucky</option>\r\n\t\t\t\t\t\t\t\t<option>Louisiana</option>\r\n\t\t\t\t\t\t\t\t<option>Maine</option>\r\n\t\t\t\t\t\t\t\t<option>Maryland</option>\r\n\t\t\t\t\t\t\t\t<option>Massachusetts</option>\r\n\t\t\t\t\t\t\t\t<option>Michigan</option>\r\n\t\t\t\t\t\t\t\t<option>Minnesota</option>\r\n\t\t\t\t\t\t\t\t<option>Mississippi</option>\r\n\t\t\t\t\t\t\t\t<option>Missouri</option>\r\n\t\t\t\t\t\t\t\t<option>Montana</option>\r\n\t\t\t\t\t\t\t\t<option>Nebraska</option>\r\n\t\t\t\t\t\t\t\t<option>Nevada</option>\r\n\t\t\t\t\t\t\t\t<option>New Hampshire</option>\r\n\t\t\t\t\t\t\t\t<option>New Jersey</option>\r\n\t\t\t\t\t\t\t\t<option>New Mexico</option>\r\n\t\t\t\t\t\t\t\t<option>New York</option>\r\n\t\t\t\t\t\t\t\t<option>North Carolina</option>\r\n\t\t\t\t\t\t\t\t<option>North Dakota</option>\r\n\t\t\t\t\t\t\t\t<option>Ohio</option>\r\n\t\t\t\t\t\t\t\t<option>Oklahoma</option>\r\n\t\t\t\t\t\t\t\t<option>Oregon</option>\r\n\t\t\t\t\t\t\t\t<option>Pennsylvania</option>\r\n\t\t\t\t\t\t\t\t<option>Rhode Island</option>\r\n\t\t\t\t\t\t\t\t<option>South Carolina</option>\r\n\t\t\t\t\t\t\t\t<option>South Dakota</option>\r\n\t\t\t\t\t\t\t\t<option>Tennessee</option>\r\n\t\t\t\t\t\t\t\t<option>Texas</option>\r\n\t\t\t\t\t\t\t\t<option>Utah</option>\r\n\t\t\t\t\t\t\t\t<option>Vermont</option>\r\n\t\t\t\t\t\t\t\t<option>Virginia</option>\r\n\t\t\t\t\t\t\t\t<option>Washington</option>\r\n\t\t\t\t\t\t\t\t<option>West Virginia</option>\r\n\t\t\t\t\t\t\t\t<option>Wisconsin</option>\r\n\t\t\t\t\t\t\t\t<option>Wyoming</option>\r\n\t\t\t\t\t\t\t</Form.Select>\r\n\t\t\t\t\t\t\t<FormControl.Feedback type='invalid'>\r\n\t\t\t\t\t\t\t\tPlease select a state.\r\n\t\t\t\t\t\t\t</FormControl.Feedback>\r\n\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t<Form.Group as={Col} controlId=\"zip\">\r\n\t\t\t\t\t\t\t<Form.Label><b>ZIP code*</b></Form.Label>\r\n\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\tvalue={zip}\r\n\t\t\t\t\t\t\t\tmin={10000}\r\n\t\t\t\t\t\t\t\tmax={99999}\r\n\t\t\t\t\t\t\t\tsize='lg'\r\n\t\t\t\t\t\t\t\tonInput={e => setzip(e.target.value)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<FormControl.Feedback type='invalid'>\r\n\t\t\t\t\t\t\t\tPlease enter a valid zip.\r\n\t\t\t\t\t\t\t</FormControl.Feedback>\r\n\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t</Row>\r\n\r\n\t\t\t\t\t{/* Email */}\r\n\t\t\t\t\t<FormGroup className='mb-3' controlId='email'>\r\n\t\t\t\t\t\t<FormLabel><b>Email*</b></FormLabel>\r\n\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\ttype='email'\r\n\t\t\t\t\t\t\tsize='lg'\r\n\t\t\t\t\t\t\tplaceholder='ealderson@ecorp.com'\r\n\t\t\t\t\t\t\tonInput={e => setemail(e.target.value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<FormControl.Feedback type='invalid'>\r\n\t\t\t\t\t\t\tPlease enter a valid email.\r\n\t\t\t\t\t\t</FormControl.Feedback>\r\n\t\t\t\t\t</FormGroup>\r\n\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<FormLabel className='text-muted'>Services</FormLabel>\r\n\t\t\t\t\t<hr className='mt-0' />\r\n\r\n\t\t\t\t\t{/* Check all services you require */}\r\n\t\t\t\t\t<FormGroup className='mb-3' controlId='services'>\r\n\t\t\t\t\t\t<FormLabel><b>Check all services you require</b></FormLabel>\r\n\t\t\t\t\t\t<FormCheck type='checkbox' id='service-1' onClick={() => service1 === true ? setservice1(false) : setservice1(true)} label='Email' />\r\n\t\t\t\t\t\t<FormCheck type='checkbox' id='service-2' onClick={() => service2 === true ? setservice2(false) : setservice2(true)} label='Facebook' />\r\n\t\t\t\t\t\t<FormCheck type='checkbox' id='service-3' onClick={() => service3 === true ? setservice3(false) : setservice3(true)} label='Twitter' />\r\n\t\t\t\t\t\t<FormCheck type='checkbox' id='service-4' onClick={() => service4 === true ? setservice4(false) : setservice4(true)} label='Surface mail' />\r\n\t\t\t\t\t\t<FormCheck type='checkbox' id='service-5' onClick={() => service5 === true ? setservice5(false) : setservice5(true)} label='Personal visit' />\r\n\t\t\t\t\t</FormGroup>\r\n\r\n\t\t\t\t\t{/* Your monthly budget for services */}\r\n\t\t\t\t\t<FormGroup className='mb-3' controlId='budget'>\r\n\t\t\t\t\t\t<FormLabel><b>Your monthly budget for services</b></FormLabel>\r\n\t\t\t\t\t\t<FormCheck type='radio' id='budget-1' name=\"budge\" onClick={e => setbudget(e.target.value)} value='Less than $50' label='Less than $50' />\r\n\t\t\t\t\t\t<FormCheck type='radio' id='budget-2' name=\"budge\" onClick={e => setbudget(e.target.value)} value='Between $50 and $100' label='Between $50 and $100' />\r\n\t\t\t\t\t\t<FormCheck type='radio' id='budget-3' name=\"budge\" onClick={e => setbudget(e.target.value)} value='Above $100' label='Above $100' />\r\n\t\t\t\t\t</FormGroup>\r\n\r\n\t\t\t\t\t{/* Accept terms */}\r\n\t\t\t\t\t<FormGroup className='mb-3' controlId='terms'>\r\n\t\t\t\t\t\t<div className='form-check'>\r\n\t\t\t\t\t\t\t<FormCheckInput\r\n\t\t\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\t\t\tstyle={{ marginInlineEnd: '.5em' }}\r\n\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<FormCheckLabel>I accept the <a href='https://youtu.be/cd2FZrBgUjA' target='_blank' rel=\"noreferrer\">Terms of service</a>*</FormCheckLabel>\r\n\t\t\t\t\t\t\t<FormControl.Feedback type='invalid'>\r\n\t\t\t\t\t\t\t\tYou must agree before submitting.\r\n\t\t\t\t\t\t\t</FormControl.Feedback>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</FormGroup>\r\n\r\n\t\t\t\t\t{/* Captcha */}\r\n\r\n\t\t\t\t\t<FormGroup className='mb-3'>\r\n\t\t\t\t\t\t{/* <iframe src='https://infinitecaptcha.sixbeeps.com/' width='420' height='570' title='captcha' />*/}\r\n\r\n\t\t\t\t\t\t<ReCAPTCHA\r\n\t\t\t\t\t\t\tref={recaptchaRef}\r\n\t\t\t\t\t\t\tsitekey='6LeBH0odAAAAABft0w8LG8ssPK6HEDAEvrc1V_nw'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FormGroup>\r\n\r\n\r\n\t\t\t\t\t<Button type='submit'>Submit</Button>\r\n\t\t\t\t</Form>\r\n\t\t\t</Container>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default connect()(Home)\r\n","export const setForm = (payload) => ({\n    type: 'FORM_SET_RESULT',\n    payload\n})\n","import React from 'react'\r\nimport { Card, Container, ListGroup } from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\nimport { useNavigate } from 'react-router'\r\nimport { useEffect } from 'react'\r\n\r\nexport const Result = ({\r\n    fname,\r\n    lname,\r\n    title,\r\n    heightFeet,\r\n    heightInches,\r\n    phone,\r\n    street,\r\n    apt,\r\n    city,\r\n    state,\r\n    zip,\r\n    email,\r\n    service1,\r\n    service2,\r\n    service3,\r\n    service4,\r\n    service5,\r\n    budget,\r\n}) => {\r\n    const navigate = useNavigate()\r\n\r\n    useEffect(() => {\r\n\r\n        if (fname === '') {\r\n            navigate('/urban-octo-umbrella')\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <Card>\r\n                    <Card.Body>\r\n                        <Card.Title><h1>Result verification page Leslie Zhou</h1></Card.Title>\r\n                        <Card.Title>Name</Card.Title>\r\n                        <Card.Text>{`${fname} ${lname}`}</Card.Text>\r\n                        <Card.Title>Preferred title</Card.Title>\r\n                        <Card.Text>{`${title}`}</Card.Text>\r\n                        {heightFeet && <div className='mb-3'>\r\n                            <Card.Title>Height</Card.Title>\r\n                            <Card.Text>{`${heightFeet}'`}{heightInches ? ` ${heightInches}\"` : ` 0\"`}</Card.Text>\r\n                        </div>\r\n                        }\r\n                        {phone && <div className='mb-3'>\r\n                            <Card.Title>Phone</Card.Title>\r\n                            <Card.Text>{`${phone}`}</Card.Text>\r\n                        </div>}\r\n\r\n                        <Card.Title>Address</Card.Title>\r\n                        <Card.Text>{`${street}`}{apt && `, ${apt}`}<br />{`${city}, ${state} ${zip}`}</Card.Text>\r\n                        <div className=\"mapouter\">\r\n                            <div className=\"gmap_canvas\">\r\n                                <iframe\r\n                                    title='map'\r\n                                    width=\"100%\"\r\n                                    height=\"500\"\r\n                                    id=\"gmap_canvas\"\r\n                                    src={`https://maps.google.com/maps?q=${street}%2C%20${city}%2C%20${state}%20${zip}&t=&z=11&ie=UTF8&iwloc=&output=embed`}\r\n                                    frameBorder=\"0\"\r\n                                    scrolling=\"no\"\r\n                                    marginHeight=\"0\"\r\n                                    marginWidth=\"0\"></iframe>\r\n                            </div>\r\n                        </div>\r\n                        {(service1 || service2 || service3 || service4 || service5) &&\r\n                            <div className='mb-3'>\r\n                                <Card.Title>Service required</Card.Title>\r\n                                <ListGroup>\r\n                                    {service1 && <ListGroup.Item>Email</ListGroup.Item>}\r\n                                    {service2 && <ListGroup.Item>Facebook</ListGroup.Item>}\r\n                                    {service3 && <ListGroup.Item>Twitter</ListGroup.Item>}\r\n                                    {service4 && <ListGroup.Item>Surface mail</ListGroup.Item>}\r\n                                    {service5 && <ListGroup.Item>Personal visit</ListGroup.Item>}\r\n                                </ListGroup>\r\n                            </div>\r\n                        }\r\n                        {budget &&\r\n                            <div className='mb-3'>\r\n                                <Card.Title>Monthly budget for services</Card.Title>\r\n                                <Card.Text>{budget}</Card.Text>\r\n                            </div>\r\n                        }\r\n                    </Card.Body>\r\n                </Card>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    fname: state.fname,\r\n    lname: state.lname,\r\n    title: state.title,\r\n    heightFeet: state.heightFeet,\r\n    heightInches: state.heightInches,\r\n    phone: state.phone,\r\n    street: state.street,\r\n    apt: state.apt,\r\n    city: state.city,\r\n    state: state.state,\r\n    zip: state.zip,\r\n    email: state.email,\r\n    service1: state.service1,\r\n    service2: state.service2,\r\n    service3: state.service3,\r\n    service4: state.service4,\r\n    service5: state.service5,\r\n    budget: state.budget,\r\n})\r\n\r\nexport default connect(mapStateToProps)(Result)\r\n","import { Routes, Route } from 'react-router-dom';\r\nimport './App.css';\r\nimport Home from './Home';\r\nimport Result from './Result'\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n            <Routes>\r\n                <Route exact path='/urban-octo-umbrella' element={<Home />} />\r\n                <Route path='/urban-octo-umbrella/result' element={<Result />} />\r\n            </Routes>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const initialState = {\n    fname: '',\n    lname: '',\n    title: '',\n    heightFeet: 0,\n    heightInches: 0,\n    phone: '',\n    street: '',\n    apt: '',\n    city: '',\n    state: '',\n    zip: 0,\n    email: '',\n    service1: false,\n    service2: false,\n    service3: false,\n    service4: false,\n    service5: false,\n    budget: '',\n}\n\nexport default (state = initialState, { type, payload }) => {\n    switch (type) {\n\n        case 'FORM_SET_RESULT':\n            return payload\n\n        default:\n            return state\n    }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css'\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { applyMiddleware, createStore } from 'redux';\r\nimport formReducer from './redux/formReducer';\r\nimport thunk from 'redux-thunk';\r\nimport { Provider } from 'react-redux';\r\n\r\nconst store = createStore(formReducer, applyMiddleware(thunk))\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}